    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.02s
     Running `/Users/thomas/Developer/building/cudapple/target/debug/cudapple -i examples/linear.cu -d output --run -v`

[1;36m╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸[0m
[1;33m   CUDApple v1.0.0[0m
[0m   Running CUDA code directly on your Mac chip
[1;36m╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸[0m


[1;35m=== CUDA Source Analysis ===[0m
[1;32mINFO [0m ✓ Successfully parsed CUDA program with 1 kernels
[1;32mINFO [0m 📦 Found kernel: linear_forward
[1;32mINFO [0m    ├─ Parameters: 7
[1;32mINFO [0m 🎯 Selected kernel: linear_forward

[1;35m=== Metal Translation ===[0m
[1;32mINFO [0m ✓ Generated Metal shader code
[1;32mINFO [0m    ├─ Dimensions: 2
[1;32mINFO [0m    ├─ Grid size: (63, 63, 1)
[1;32mINFO [0m    └─ Thread group size: (16, 16, 1)

[1;35m=== File Generation ===[0m
[1;32mINFO [0m ✓ Written Metal shader: "output/kernel.metal"
[1;32mINFO [0m ✓ Written Swift files:
[1;32mINFO [0m    ├─ "output/MetalKernelRunner.swift"
[1;32mINFO [0m    └─ "output/main.swift"

[1;35m=== Kernel Execution ===[0m
[1;32mINFO [0m 🚀 Compiling and running the kernel...
[1;32mINFO [0m ✓ Successfully compiled Swift code


=== CUDApple Kernel Execution ===
• Emulating CUDA kernel: linear_forward

=== Input Values ===

input[0] = 0.0
weight[0] = 0.0
bias[0] = 0.0
output[0] = 0.0
input[1] = 0.0
weight[1] = 0.0
output[1] = 0.0
input[2] = 0.0
weight[2] = 0.0
output[2] = 0.0
input[3] = 0.0
weight[3] = 0.0
output[3] = 0.0
input[4] = 0.0
weight[4] = 0.0
output[4] = 0.0

=== Metal Device Detection ===
• Scanning for compatible Metal devices...
• Using device: Apple M1
  ├─ Recommended max threads per threadgroup: MTLSize(width: 1024, height: 1024, depth: 1024)
  └─ Supports unified memory: Yes

• Allocating buffer 0
  ├─ Elements: 1000000
  └─ Size: 4000000 bytes
• Successfully allocated buffer 0

• Allocating buffer 1
  ├─ Elements: 1000000
  └─ Size: 4000000 bytes
• Successfully allocated buffer 1

• Allocating buffer 2
  ├─ Elements: 1000000
  └─ Size: 4000000 bytes
• Successfully allocated buffer 2

• Allocating buffer 3
  ├─ Elements: 1000000
  └─ Size: 4000000 bytes
• Successfully allocated buffer 3

=== Buffer Contents Before Kernel Execution ===
Buffer 0 first 5 elements:
  [0]: 0.0
  [1]: 0.0
  [2]: 0.0
  [3]: 0.0
  [4]: 0.0
Buffer 1 first 5 elements:
  [0]: 0.0
  [1]: 0.0
  [2]: 0.0
  [3]: 0.0
  [4]: 0.0
Buffer 2 first 5 elements:
  [0]: 0.0
  [1]: 0.0
  [2]: 0.0
  [3]: 0.0
  [4]: 0.0
Buffer 3 first 5 elements:
  [0]: 0.0
  [1]: 0.0
  [2]: 0.0
  [3]: 0.0
  [4]: 0.0
Buffer 4 (UInt32): 0
Buffer 5 (UInt32): 0
Buffer 6 (UInt32): 0

=== Kernel Configuration ===
Grid Size: MTLSize(width: 1000, height: 1000, depth: 1)
Thread Group Size: MTLSize(width: 16, height: 16, depth: 1)
Problem Size: 1000000
Total Threads: 256000000

=== Buffer Contents After Kernel Execution ===
Buffer 0 first 5 elements:
  [0]: 0.0
  [1]: 0.0
  [2]: 0.0
  [3]: 0.0
  [4]: 0.0
Buffer 1 first 5 elements:
  [0]: 0.0
  [1]: 0.0
  [2]: 0.0
  [3]: 0.0
  [4]: 0.0
Buffer 2 first 5 elements:
  [0]: 0.0
  [1]: 0.0
  [2]: 0.0
  [3]: 0.0
  [4]: 0.0
Buffer 3 first 5 elements:
  [0]: 0.0
  [1]: 0.0
  [2]: 0.0
  [3]: 0.0
  [4]: 0.0
Buffer 4 (UInt32): 0
Buffer 5 (UInt32): 0
Buffer 6 (UInt32): 0
• Kernel execution completed in 15.156ms

=== Results ===
• First 5 output values:
  [0]: 0.0
  [1]: 0.0
  [2]: 0.0
  [3]: 0.0
  [4]: 0.0


[1;35m=== Summary ===[0m
✅ [1;32mSuccessfully completed all operations![0m
